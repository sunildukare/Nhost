import { MultipleFilesHandlerResult, MultipleFilesUploadState, UploadMultipleFilesActionParams } from '@nhost/nhost-js';

export interface MultipleFilesHookResult extends MultipleFilesUploadState {
    /**
     * Add one or multiple files to add to the list of files to upload.
     */
    add: (params: Required<Pick<UploadMultipleFilesActionParams, 'files'>> & UploadMultipleFilesActionParams) => void;
    /**
     * Upload the files that has been previously added to the list.
     */
    upload: (params?: UploadMultipleFilesActionParams) => Promise<MultipleFilesHandlerResult>;
    /**
     * Cancel the ongoing upload. The files that have been successfully uploaded will not be deleted from the server.
     */
    cancel: () => void;
    /**
     * Clear the list of files.
     */
    clear: () => void;
}
/**
 * Use the hook `useMultipleFilesUpload` to upload multiple files.
 *
 * @example
 * ```tsx
 * const { upload, add, clear, progress, isUploaded, isUploading, files, isError, cancel } = useMultipleFilesUpload()
 *
 * const addFile = async (files: File | File[] | FileList) => {
 *   add({ files })
 * }
 *
 * const handleSubmit = async (e) => {
 *   e.preventDefault();
 *   upload()
 * }
 * ```
 * @docs https://docs.nhost.io/reference/react/use-multiple-files-upload
 */
export declare const useMultipleFilesUpload: () => MultipleFilesHookResult;
//# sourceMappingURL=useMultipleFilesUpload.d.ts.map