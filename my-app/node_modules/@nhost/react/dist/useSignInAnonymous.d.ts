/**
 * Use the hook `useSignInAnonymous` to sign in a user anonymously.
 *
 * As a result, the user will have the `anonymous` role and subsequent set of permissions.
 * The user can then be converted to a regular user at a later stage using email+password sign-up, passwordless email (magic link), or passwordless SMS.
 *
 * @example
 * ```tsx
 * const { signInAnonymous, isLoading, isSuccess, isError, error } = useSignInAnonymous()
 *
 * console.log({ isLoading, isSuccess, isError, error });
 *
 * const handleFormSubmit = async (e) => {
 *   e.preventDefault();
 *
 *   await signInAnonymous();
 * }
 * ```
 *
 * @docs https://docs.nhost.io/reference/react/use-sign-in-anonymous
 */
export declare const useSignInAnonymous: () => {
    accessToken: string | null;
    error: import('@nhost/nhost-js').AuthErrorPayload | null;
    isError: boolean;
    isLoading: boolean;
    isSuccess: boolean;
    signInAnonymous: () => Promise<import('@nhost/nhost-js').SignInAnonymousHandlerResult>;
    user: import('@nhost/nhost-js').User | null;
};
//# sourceMappingURL=useSignInAnonymous.d.ts.map