import { ActionErrorState, ActionLoadingState, ActionSuccessState, PasswordlessOptions, SignInEmailPasswordlessHandlerResult } from '@nhost/nhost-js';

interface SignInEmailPasswordlessHandler {
    (email: string, options?: PasswordlessOptions): Promise<SignInEmailPasswordlessHandlerResult>;
}
export interface SignInEmailPasswordlessHookResult extends ActionLoadingState, ActionSuccessState, ActionErrorState {
    /** Sends a magic link to the given email */
    signInEmailPasswordless: SignInEmailPasswordlessHandler;
}
/**
 * Use the hook `useSignInEmailPasswordless` to sign in a user using passwordless email (Magic Link).
 *
 * @example
 * ```tsx
 * const { signInEmailPasswordless, isLoading, isSuccess, isError, error } = useSignInEmailPasswordless()
 *
 * console.log({ isLoading, isSuccess, isError, error });
 *
 * const handleFormSubmit = async (e) => {
 *   e.preventDefault();
 *
 *   await signInEmailPasswordless('joe@example.com');
 * }
 * ```
 *
 * @docs https://docs.nhost.io/reference/react/use-sign-in-email-passwordless
 */
export declare function useSignInEmailPasswordless(options?: PasswordlessOptions): SignInEmailPasswordlessHookResult;
export {};
//# sourceMappingURL=useSignInEmailPasswordless.d.ts.map